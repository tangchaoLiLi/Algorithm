package questions;

/**
 * HJ35 蛇形矩阵
 * 题目
 * 题解(586)
 * 讨论(791)
 * 排行
 * 面经new
 * 简单  通过率：47.91%  时间限制：1秒  空间限制：32M
 * 知识点
 * 数组
 * warning 校招时部分企业笔试将禁止编程题跳出页面，为提前适应，练习时请使用在线自测，而非本地IDE。
 * 描述
 * 蛇形矩阵是由1开始的自然数依次排列成的一个矩阵上三角形。
 *
 * 例如，当输入5时，应该输出的三角形为：
 *
 * 1 3 6 10 15
 *
 * 2 5 9 14
 *
 * 4 8 13
 *
 * 7 12
 *
 * 11
 *
 *
 * 输入描述：
 * 输入正整数N（N不大于100）
 *
 * 输出描述：
 * 输出一个N行的蛇形矩阵。
 *
 * 示例1
 * 输入：
 * 4
 * 复制
 * 输出：
 * 1 3 6 10
 * 2 5 9
 * 4 8
 * 7
 */
public class SerpentineMatrix {
    public static void main(String[] args) {
        /**
         * 0,0 --- 1
         * 0,1 --- 3
         * 0,2 --- 6
         * 0,3 --- 10
         *
         * 1,0 --- 2
         * 1,1 --- 5
         * 1,2 --- 9
         * 2,0 --- 4
         * 2,1 --- 8
         * 3,0 --- 7
         */
        int n = 5;
        int[][] arr = new int[n][n];
        int t = 1;    //记录依次赋予的数组值
        for(int i=0; i < n; i++){
            arr[i] = new int[n-i];    //数组第i行有n-i个元素
            for(int j=0; j < i+1; j++){    //对第i个对角线赋值
                arr[i-j][j] = t;
                t++;
            }
        }
        //遍历二维数组
        for (int i=0;i<n;i++) {
            for (int j=0;j<n-i;j++) {
                System.out.print(arr[i][j] + " ");
            }
            System.out.println();
        }
    }
}
